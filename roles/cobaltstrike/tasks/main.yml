---
# tasks file for cobalt_strike role

# General installation
- name: Write license key to file
  copy:
    content: "{{ license_key }}"
    dest: "{{ ansible_env.HOME }}/.cobaltstrike.license"

- name: Install core deps
  apt:
    name:
      - openjdk-11-jdk
      - curl
      - tmux
    update_cache: yes
    state: latest
  become: yes
  tags: update

- name: Set default Java version
  shell: update-java-alternatives -s java-1.11.0-openjdk-amd64
  become: yes

- name: Get download token from Cobalt Strike website
  shell: |
    curl -s https://www.cobaltstrike.com/download -d "dlkey={{ license_key }}" | grep 'href="/downloads/' | cut -d '/' -f3
  register: download_token

- name: Download Cobalt Strike tarball
  get_url:
    url: "https://www.cobaltstrike.com/downloads/{{ download_token.stdout }}/cobaltstrike-dist.tgz"
    dest: "/tmp/"
    mode: get

- name: Extract the Cobalt Strike tarball
  unarchive:
    src: /tmp/cobaltstrike-dist.tgz
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes

- name: Update Cobalt Strike from the CS directory
  shell: ./update
  args:
    chdir: "{{ ansible_env.HOME }}/cobaltstrike"
  tags: update_cs
  # tag to update
  

# Teamserver functionality - block runs only when 'teamserver' is in the hostname
- name: Configure CS installation as Teamserver
  block:
  - name: Create profile directory in CS directory
    file:
      path: "{{ ansible_env.HOME }}/cobaltstrike/profiles"
      state: directory

  - name: Download c2 profile of choice
    get_url:
      url: "{{ c2_profile_url }}"
      dest: "{{ ansible_env.HOME }}/cobaltstrike/profiles"
      mode: get

  - name: Start teamserver inside tmux session when teamserver is in hosts
    shell: |
      tmux new-session -d -s teamserver_session 'cd {{ ansible_env.HOME }}/cobaltstrike && sudo ./teamserver {{ ansible_default_ipv4.address }} {{ teamserver_password }} {{ ansible_env.HOME }}/cobaltstrike/profiles/{{ c2_profile_url | basename }}'
    args:
      chdir: "{{ ansible_env.HOME }}/cobaltstrike"
  
  tags: teamserver
  when: "'teamserver' in inventory_hostname"

# Operator functionality
- name: Configure CS installation as Operator
  block:
  - name: Create kit directory in CS directory
    file:
      path: "{{ ansible_env.HOME }}/cobaltstrike/kits"
      state: directory

  - name: Get download token for scripts from Cobalt Strike website
    shell: |
      curl -s https://www.cobaltstrike.com/scripts -d "dlkey={{ license_key }}" | grep 'href="/downloads/' | cut -d '/' -f3 | head -1
    register: script_download_token

  - name: Grep the kit URLs and save to dictionary
    shell: |
      curl -s https://www.cobaltstrike.com/scripts -d "dlkey={{ license_key }}" | grep 'href="/downloads/' | grep {{ item }} | awk -F'/|"' '{print $5}'
    loop:
      - artifact
      - resource 
    register: kit_urls

  - name: Download kits by looping over dictionary
    get_url:
      url: "https://www.cobaltstrike.com/downloads/{{ script_download_token.stdout }}/{{ item.stdout }}"
      dest: "/tmp/"
      mode: get
    loop: "{{ kit_urls.results }}"

  - name: Extract the Cobalt Strike kits
    unarchive:
      src: /tmp/{{ item.stdout }}
      dest: "{{ ansible_env.HOME }}/cobaltstrike/kits"
      remote_src: yes
    loop: "{{ kit_urls.results }}"
  
  tags: operator
  #when: "'operator' in inventory_hostname"


# Cleanup functionality
- name: Delete Cobalt Strike tarballs
  file:
    path: "/tmp/*.tgz"
    state: absent
